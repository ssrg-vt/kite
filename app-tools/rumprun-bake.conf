#
# rumpbake default configuration file
#

version 20160209

#
# First, define internal convenience sets.
#
conf _foundation
	create	"basic components for the Rumprun unikernel"
	add	-lrumpvfs			\
		-lrumpkern_bmktc		\
		-lrumpkern_mman			\
		-lrumpdev			\
		-lrumpfs_tmpfs			\
		-lrumpnet_config		\
		-lrumpnet			\
		-lrumpdev_bpf			\
		-lrumpdev_vnd			\
		-lrumpdev_rnd			\
		-lrumprunfs_base
fnoc

conf _virtio
	create	"virtio drivers"
	add	-lrumpdev_virtio_if_vioif	\
		-lrumpdev_virtio_ld		\
		-lrumpdev_virtio_viornd		\
		-lrumpdev_pci_virtio		\
		-lrumpdev_pci
fnoc

conf _audio
	create	"audio subsystem and some PCI audio device drivers"
	add	-lrumpdev_audio			\
		-lrumpdev_audio_ac97		\
		-lrumpdev_pci_auich		\
		-lrumpdev_pci_eap		\
		-lrumpdev_pci_hdaudio		\
		-lrumpdev_hdaudio_hdafg
fnoc

conf _netinet
	create	"TCP/IP (v4)"
	add	-lrumpnet_netinet		\
		-lrumpnet_net			\
		-lrumpnet			\
		-lrumpnet_bridge
fnoc

conf _netinet6
	create	"TCP/IP (v6)"
	add	-lrumpnet_netinet6		\
		-lrumpnet_net			\
		-lrumpnet
fnoc

conf _netunix
	create	"local domain sockets"
	add	-lrumpnet_local			\
		-lrumpnet
fnoc

conf _stdfs
	create	"selection of file system drivers"
	add	-lrumpfs_ffs			\
		-lrumpfs_cd9660			\
		-lrumpfs_ext2fs			\
		-lrumpdev_disk			\
		-lrumpvfs
fnoc

conf _pciether
	create	"PCI Ethernet NIC drivers"
	add	-lrumpdev_pci_if_wm		\
		-lrumpdev_pci_ixgbe		\
		-lrumpdev_miiphy		\
		-lrumpdev_pci
fnoc

conf _usb
	create	"USB stack incl. PCI USB host controllers"
	add	-lrumpdev_pci_usbhc		\
		-lrumpdev_usb			\
		-lrumpdev_umass			\
		-lrumpdev_scsipi		\
		-lrumpdev_pci
fnoc

conf _ixgbe
	create	"ixgbe drivers"
	add 	-lrumpdev_pci			\
		-lrumpdev_miiphy		\
		-lrumpdev_pci_ixgbe
fnoc

# this is a config so that it can be assimilated
conf _sysproxy
	create	"system call proxy support"
	add	-lrumpkern_sysproxy
fnoc

conf _miconf
	create		"general useful MI/pseudo driver set"
	assimilate	_foundation		\
			_netinet		\
			_netinet6		\
			_netunix		\
			_stdfs			\
			_sysproxy
fnoc

conf _virtio_scsi
	create		"virtio SCSI"
	add		-lrumpdev_virtio_vioscsi
	add		-lrumpdev_scsipi
fnoc


#
# then, define some end-user configs
#

conf xen_pv
	create		"Xen with paravirtualized I/O drivers"
	assimilate	_miconf
	add		-lrumpfs_kernfs		\
			-lrumpnet_xenif		\
			-lrumpxen_xendev
fnoc

conf xen_pci
	create		"Xen with paravirtualized and PCI I/O drivers"
	assimilate	xen_pv			\
			_pciether
fnoc

conf hw_virtio
	create		"virtio targets (e.g. QEMU/KVM)"
	assimilate	_miconf			\
			_virtio
fnoc

conf hw_virtio_scsi
	create		"virtio targets with SCSI (e.g. QEMU/KVM)"
	assimilate	_miconf			\
			_virtio			\
			_virtio_scsi
fnoc

conf hw_generic
	create		"generic targets, includes (almost) all drivers"
	assimilate	_miconf			\
			_virtio			\
			_virtio_scsi		\
			_audio			\
			_pciether		\
			_usb
fnoc

conf hw_netback
       create          "network driver - backend"
       assimilate      _miconf         \
                       _pciether
       add             -lrumpxen_netback
fnoc

conf hw_netfront
       create          "network driver - frontend"
       assimilate      _miconf         \
                       _pciether
       add             -lrumpnet_xenif
fnoc

conf hw_netdaisy
       create          "network frontend-backend daisy chaining"
       assimilate      _miconf         \
                       _pciether
       add             -lrumpnet_xenif  \
                       -lrumpxen_netback
fnoc
